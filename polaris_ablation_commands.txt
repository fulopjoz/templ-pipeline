# Polaris Benchmark Ablation Study Commands
# Run these commands individually to generate data for the ablation study table

# Base command template:
# python templ_pipeline/benchmark/polaris/benchmark.py [OPTIONS]

# ========================================
# 1. DEFAULT: MCS + 200 conformers + ComboTanimoto
# ========================================
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric combo

# ========================================
# 2. MERS PDB reference (native templates only)
# ========================================
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric combo

# ========================================
# 3. Different alignment metrics
# ========================================
# ShapeTanimoto
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric shape

# ColorTanimoto  
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric color

# ========================================
# 4. Unconstrained embedding variants
# ========================================
# Unconstrained embedding + ComboTanimoto
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric combo --unconstrained

# Unconstrained embedding + ShapeTanimoto
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric shape --unconstrained

# Unconstrained embedding + ColorTanimoto
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric color --unconstrained

# ========================================
# 5. No realignment
# ========================================
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric combo --no-realign

# ========================================
# 6. MMFF94x force field optimization
# ========================================
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 200 --align-metric combo --enable-optimization

# ========================================
# 7. Conformer count variations
# ========================================
# 100 conformers
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 100 --align-metric combo

# 50 conformers
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 50 --align-metric combo

# 20 conformers
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 20 --align-metric combo

# 10 conformers
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 10 --align-metric combo

# 5 conformers
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 5 --align-metric combo

# 1 conformer
python templ_pipeline/benchmark/polaris/benchmark.py --test-only --n-conformers 1 --align-metric combo

# ========================================
# Quick test commands (for testing)
# ========================================
# Quick run with minimal conformers and molecules
python templ_pipeline/benchmark/polaris/benchmark.py --quick --n-conformers 10

# ========================================
# Result extraction notes:
# ========================================
# Success rates are found in the JSON output files:
# - Look for "MERS_test_native" and "SARS_test_native" in results
# - Extract "rate_2A" values from "success_rates" -> "combo" (or specified metric)
# - MERS < 2Å: results["MERS_test_native"]["summary"]["success_rates"]["combo"]["rate_2A"]
# - SARS < 2Å: results["SARS_test_native"]["summary"]["success_rates"]["combo"]["rate_2A"]
# - Combined rate: weighted average (MERS: 76 molecules, SARS: 119 molecules)